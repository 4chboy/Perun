name: Build

on:
  push:
    branches:
      - 'master'
      - 'ci/*'
  pull_request:
    branches:
      - '*'

jobs:
  job:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows Latest MSVC",
            artifact: "Windows-MSVC.tar.xz",
            os: windows-latest,
            build_type: "Release",
            cc: "cl",
            cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            generators: "Visual Studio 16 2019",
            triplet: x64-windows,
            vcpkgCommitId: '8a9a97315aefb3f8bc5d81bf66ca0025938b9c91',
            vcpkgPackages: 'sqlite3',
          }
          - {
            name: "Ubuntu Latest GCC",
            artifact: "Linux.tar.xz",
            os: ubuntu-latest,
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            triplet: x64-linux,
            vcpkgCommitId: '8a9a97315aefb3f8bc5d81bf66ca0025938b9c91',
            vcpkgPackages: 'sqlite3',
          }
          - {
            name: "MacOS Latest Clang",
            artifact: "macOS.tar.xz",
            os: macos-latest,
            build_type: "Release",
            cc: "clang",
            cxx: "clang++",
            triplet: x64-osx,
            vcpkgCommitId: '8a9a97315aefb3f8bc5d81bf66ca0025938b9c91',
            vcpkgPackages: 'sqlite3',
          }
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: lukka/get-cmake@latest
      - name: dir
        shell: bash
        run: find $RUNNER_WORKSPACE
      - name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@v4
        id: runvcpkg
        with:
          vcpkgArguments: '${{ matrix.config.vcpkgPackages }}'
          vcpkgTriplet: '${{ matrix.config.triplet }}'
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgGitCommitId: '${{ matrix.config.vcpkgCommitId }}'
      - name: dir
        shell: bash
        run: find $RUNNER_WORKSPACE
      - name: Prints outputs of run-vcpkg task
        run: echo "'${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}' '${{  steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "
      - name: Install GCC-10
        if: startsWith(matrix.config.os, 'ubuntu-latest')
        shell: bash
        run: |
          echo Update gcc-10 =======================================================================
          echo gcc version before
          gcc --version
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install gcc-10 g++-10
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 90 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10
          echo gcc version after
          gcc --version
      - name: Run Build
        uses: lukka/run-cmake@v3
        id: runcmake
        with:
          cmakeGenerator: 'Ninja'
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          useVcpkgToolchainFile: true
          buildWithCMakeArgs: '-- -v'
          buildDirectory: '${{ runner.workspace }}/build/'